import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

plugins {
	id 'java'
	id 'org.openapi.generator' version '5.4.0'
}

group = 'ch.bbw.m226'
version = '0.0.0-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(16)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.6'
	implementation 'com.google.code.findbugs:jsr305:3.0.2'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.2'
	implementation 'org.springframework.boot:spring-boot-starter-validation:2.6.4'
	implementation 'org.springframework.boot:spring-boot-starter-web:2.6.4'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:2.6.4'
	testImplementation 'org.springframework.boot:spring-boot-starter-webflux:2.6.4'
}

tasks.openApiGenerate.enabled = false

task openApiGenerateSpringboot(type: GenerateTask) {
	generatorName = "spring"
	inputSpec = file("openapi-spec.yaml").absolutePath
	outputDir = file('build/generated/openapi-spring').absolutePath
	library = "spring-boot"
	additionalProperties = [
			"basePackage": "ch.bbw.m226.openapi.generated",
			"modelPackage": "ch.bbw.m226.openapi.generated.dto",
			"apiPackage": "ch.bbw.m226.openapi.generated.controller",
			"interfaceOnly": "true",
			"hideGenerationTimestamp": "true",
			"skipDefaultInterface": "true",
	]
}

task openApiGenerateJavascript(type: GenerateTask) {
	generatorName = "typescript-fetch"
	inputSpec = file("openapi-spec.yaml").absolutePath
	outputDir = file('src/generated/openapi').absolutePath
	additionalProperties = [
		"typescriptThreePlus": "true",
	]
}

task openapi {
	dependsOn openApiGenerateSpringboot
	dependsOn openApiGenerateJavascript
}

compileJava.dependsOn openApiGenerateSpringboot

openApiValidate {
	inputSpec = file("openapi-spec.yaml").absolutePath
}
test {
	dependsOn tasks.openApiValidate
	useJUnitPlatform()
}

configurations {
	js
}

sourceSets {
	main {
		java {
			srcDirs += [file('build/generated/openapi-spring/src/main/java')]
		}
	}
	js {
		java { // hack
			srcDirs += [file('src')]
		}
		resources {
			srcDirs += [file('public')]
		}
	}
}

tasks.withType(JavaCompile) {
	options.incremental = false
}