openapi: "3.0.3"
info:
  version: 0.0.1
  title: IGDB Api
  description: The API for Game, Platform and Publisher Infos
servers:
  - url: http://localhost:8080/api
paths:
  /games:
    get:
      summary: List all games
      operationId: GetGames
      responses:
        200:
          description: Array of Game objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Game"
    post:
      summary: Add Game
      operationId: AddGame
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Game"
      responses:
        201:
          description: added the game
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Game"
    put:
      summary: Update a Game
      operationId: updateGame
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Game"
      responses:
        200:
          description: updated the game
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Game"
  /games/{id}:
    delete:
      summary: delete Game by id
      operationId: deleteGame
      parameters:
        - name: id
          in: path
          description: the id of the Publisher
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: successful
        400:
          description: No Game Found

  /publishers:
    get:
      summary: list all Publishers
      operationId: GetPublishers
      responses:
        200:
          description: Array of Publisher objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Publisher"
    post:
      summary: Add publisher
      operationId: AddPublisher
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Publisher"
      responses:
        201:
          description: added the publisher
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Publisher"
    put:
      summary: Update a publisher
      operationId: updatePublisher
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Publisher"
      responses:
        201:
          description: updated the publisher
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Publisher"

  /publishers/{id}:
    get:
      summary: Get Publisher by id
      operationId: GetPublisherById
      parameters:
        - name: id
          in: path
          description: the id of the Publisher
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Get one Publisher object if found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Publisher"
        400:
          description: No publisher Found
    delete:
      summary: delete Publisher by id
      operationId: deletePublisher
      parameters:
        - name: id
          in: path
          description: the id of the Publisher
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: successful
        400:
          description: No publisher Found
components:
  schemas:
    Game:
      required:
        - Name
        - PublisherIDs
        - Image
        - Rating
      properties:
        Id:
          type: integer
          example: 189375629
        Name:
          type: string
          example: Mario Kart
        Image:
          type: string
          example: https://th.bing.com/th/id/R.b080dc89a6ec65bab84b45aa087b2a86?rik=h0R7Q2oMKzFomQ&riu=http%3a%2f%2fassets2.ignimgs.com%2f2014%2f12%2f09%2fmario-kart-8jpg-877534.jpg&ehk=Yv%2b8wNGdMDe77xNWNcJ4o%2bJLllG%2bPLfEfrfMtrgww7A%3d&risl=&pid=ImgRaw&r=0
        ReleaseDate:
          type: string
          pattern: "^(3[01]|[12][0-9]|0[1-9])-(1[0-2]|0[1-9])-[0-9]{4}$"
          example: "2019-05-17"
        PublisherID:
          type: integer
        Rating:
          type: integer
          example: 5
        Downloads:
          type: integer
          example: 120000
        Price:
          type: number
          example: 75.5
        Crossplay:
          type: boolean
          example: true
        PlatformIDs:
          type: array
          items:
            type: integer
        Platforms:
          type: array
          items:
            $ref: "#/components/schemas/Platform"
        Category:
          $ref: "#/components/schemas/Category"
        Size:
          type: number
          example: 56
    Publisher:
      required:
        - Name
        - Id
      properties:
        Id:
          type: integer
          example: 18293873
        Name:
          type: string
          example: Activision
        MarketCap:
          type: string
          example: 12 Million
    Platform:
      required:
        - Id
        - Name
      properties:
        Id:
          type: integer
          example: 217287864
        Name:
          type: string
          example: Playstation 4
        Players:
          type: integer
          example: 1200000
    Category:
      type: string
      enum:
        - Action
        - Adventure
        - Fantasy
        - Shooter
        - Stealth