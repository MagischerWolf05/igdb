openapi: "3.0.3"
info:
  version: 0.0.1
  title: Ponyhof API
  description: A small sample API to grasp the basics of the OpenAPI Specification
servers:
  - url: http://localhost:8080/api
paths:
  /games:
    get:
      summary: List all games
      operationId: GetGames
      responses:
        200:
          description: Array of Game objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Game"
    post:
      summary: Add Game
      operationId: AddGame
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Game"
      responses:
        201:
          description: added the game
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Game"
  /publishers:
    get:
      summary: list all Publishers
      operationId: GetPublishers
      responses:
        200:
          description: Array of Publisher objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Publisher"
    post:
      summary: Add publisher
      operationId: AddPublisher
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Publisher"
      responses:
        201:
          description: added the publisher
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Publisher"
  /publishers/{id}:
    get:
      summary: Get Publisher by id
      operationId: GetPublisherById
      parameters:
        - name: id
          in: path
          description: the id of the Publisher
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Get one Publisher object if found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Publisher"
        400:
          description: No publisher Found





  /ponies:
    get:
      summary: List all ponies
      operationId: getPonies
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time
          required: false
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: An paged array of pets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PonyDto"
    post:
      summary: introduce a new pony to the flock
      operationId: addPony
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PonyDto"
      responses:
        201:
          description: added the pony
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PonyDto"
components:
  schemas:
    Game:
      required:
        - Id
        - Name
        - Publisher
        - ReleaseDate
      properties:
        Id:
          type: integer
          readOnly: true
        Name:
          type: string
        ReleaseDate:
          type: string
          format: date-time
        PublisherID:
          type: integer
        Publisher:
          $ref: "#components/schemas/Publisher"
        Rating:
          type: integer
        Downloads:
          type: integer
        Price:
          type: number
        Crossplay:
          type: boolean
        Platforms:
          type: array
          items:
            $ref: "#components/schemas/Platform"
        Category:
          type: integer
        Size:
          type: number
    Publisher:
      required:
        - Name
        - Id
      properties:
        Id:
          type: integer
        Name:
          type: string
        MarketCap:
          type: string
        Rating:
          type: integer
    Platform:
      required:
        - Id
        - Name
      properties:
        Id:
          type: integer
        Name:
          type: string
        Players:
          type: integer
    PonyDto:
      required:
        - name
        - birthday
      properties:
        id:
          type: integer
          example: 42
          minimum: 0
          readOnly: true
        name:
          type: string
          minLength: 1
          example: Thunder
        birthday:
          type: string
          format: date
          example: 2021-01-31